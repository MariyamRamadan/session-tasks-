import math

class ComplexNumber:
    def __init__(self, real_part, imaginary_part):
        self.real = real_part
        self.imaginary = imaginary_part

    def __str__(self):
        if self.imaginary >= 0:
            return f"{self.real} + {self.imaginary}i"
        else:
            return f"{self.real} - {-self.imaginary}i"

    def __add__(self, other):
        real_sum = self.real + other.real
        imaginary_sum = self.imaginary + other.imaginary
        return ComplexNumber(real_sum, imaginary_sum)

    def __sub__(self, other):
        real_diff = self.real - other.real
        imaginary_diff = self.imaginary - other.imaginary
        return ComplexNumber(real_diff, imaginary_diff)

    def __mul__(self, other):
        real_prod = self.real * other.real 
        imaginary_prod = other.imaginary * self.imaginary 
        return ComplexNumber(real_prod, imaginary_prod)
    
    def __truediv__(self, other):
        real_div = (self.real * other.real + self.imaginary * other.imaginary) / (other.real ** 2 + other.imaginary ** 2)
        imaginary_div = (self.imaginary * other.real - self.real * other.imaginary) / (other.real ** 2 + other.imaginary ** 2)
        return ComplexNumber(real_div, imaginary_div)

    def mod(self):
        magnitude = math.sqrt(self.real ** 2 + self.imaginary ** 2)
        return magnitude

# Example usage
real_c = float(input("Enter the real part of complex number C: "))
imaginary_c = float(input("Enter the imaginary part of complex number C: "))
real_d = float(input("Enter the real part of complex number D: "))
imaginary_d = float(input("Enter the imaginary part of complex number D: "))

c = ComplexNumber(real_c, imaginary_c)
d = ComplexNumber(real_d, imaginary_d)

print("Complex number C:",c)
print("Complex number D:", d)
print("Sum of C and D:",c + d)
print("Difference of C and D:", c - d)
print("Product of C and D:",c*d)
print("divsion of C and D", round((c / d).real, 2), "+", round((c / d).imaginary, 2), "i")
print("mod C =", round(c.mod(),2))
print("mod D =", round(d.mod(),2))
